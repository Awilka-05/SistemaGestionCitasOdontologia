// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaGestionCitas.Infrastructure.Persistence.BdContext;

#nullable disable

namespace SistemaGestionCitas.Infrastructure.Migrations
{
    [DbContext(typeof(SistemaCitasDbContext))]
    partial class SistemaCitasDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.Cita", b =>
                {
                    b.Property<int>("IdCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCita"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<short>("LugarId")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<short>("ServicioId")
                        .HasColumnType("smallint");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("IdCita");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("LugarId");

                    b.HasIndex("ServicioId");

                    b.HasIndex("TurnoId");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.ConfiguracionTurno", b =>
                {
                    b.Property<int>("TurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurnoId"));

                    b.Property<bool>("AunAceptaCitas")
                        .HasColumnType("bit");

                    b.Property<int>("CantidadEstaciones")
                        .HasColumnType("int");

                    b.Property<int>("DuracionMinutos")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<short>("HorariosId")
                        .HasColumnType("smallint");

                    b.HasKey("TurnoId");

                    b.HasIndex("HorariosId");

                    b.ToTable("ConfiguracionesTurnos");
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.Horario", b =>
                {
                    b.Property<short>("HorarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("HorarioId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.HasKey("HorarioId");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.Lugar", b =>
                {
                    b.Property<short>("LugarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("LugarId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LugarId");

                    b.ToTable("Lugares");
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.Servicio", b =>
                {
                    b.Property<short>("ServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("ServicioId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ServicioId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.Cita", b =>
                {
                    b.HasOne("SistemaGestionCitas.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Citas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGestionCitas.Domain.Entities.Lugar", "Lugar")
                        .WithMany("Citas")
                        .HasForeignKey("LugarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGestionCitas.Domain.Entities.Servicio", "Servicio")
                        .WithMany("Citas")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGestionCitas.Domain.Entities.ConfiguracionTurno", "ConfiguracionTurno")
                        .WithMany("Citas")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConfiguracionTurno");

                    b.Navigation("Lugar");

                    b.Navigation("Servicio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.ConfiguracionTurno", b =>
                {
                    b.HasOne("SistemaGestionCitas.Domain.Entities.Horario", "Horario")
                        .WithMany("ConfiguracionesTurnos")
                        .HasForeignKey("HorariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Horario");
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.Usuario", b =>
                {
                    b.OwnsOne("SistemaGestionCitas.Domain.Value_Objects.Cedula", "Cedula", b1 =>
                        {
                            b1.Property<int>("UsuarioIdUsuario")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Cedula");

                            b1.HasKey("UsuarioIdUsuario");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioIdUsuario");
                        });

                    b.OwnsOne("SistemaGestionCitas.Domain.Value_Objects.Correo", "Correo", b1 =>
                        {
                            b1.Property<int>("UsuarioIdUsuario")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Correo");

                            b1.HasKey("UsuarioIdUsuario");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioIdUsuario");
                        });

                    b.OwnsOne("SistemaGestionCitas.Domain.Value_Objects.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("UsuarioIdUsuario")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("UsuarioIdUsuario");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioIdUsuario");
                        });

                    b.Navigation("Cedula")
                        .IsRequired();

                    b.Navigation("Correo")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.ConfiguracionTurno", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.Horario", b =>
                {
                    b.Navigation("ConfiguracionesTurnos");
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.Lugar", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.Servicio", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("SistemaGestionCitas.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
